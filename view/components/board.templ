package components

import (
	"github.com/LyubenGeorgiev/shah/view/components/models"
	"fmt"
)

var squareToString = [...]string{
	"a8", "b8", "c8", "d8", "e8", "f8", "g8", "h8",
	"a7", "b7", "c7", "d7", "e7", "f7", "g7", "h7",
	"a6", "b6", "c6", "d6", "e6", "f6", "g6", "h6",
	"a5", "b5", "c5", "d5", "e5", "f5", "g5", "h5",
	"a4", "b4", "c4", "d4", "e4", "f4", "g4", "h4",
	"a3", "b3", "c3", "d3", "e3", "f3", "g3", "h3",
	"a2", "b2", "c2", "d2", "e2", "f2", "g2", "h2",
	"a1", "b1", "c1", "d1", "e1", "f1", "g1", "h1",
}

// func getBackground(square int) string {
// 	if (square / 8 + square % 8) % 2 == 0 {
// 		return "bg-yellow-100"
// 	}

// 	return "bg-green-500"
// }

// templ Square(piece string, square int, action models.Action) {
// 	<div { templ.Attributes{
// 		"id": squareToString[square],
// 		"hx-trigger": templ.KeyValue[string, bool]{Key: "click", Value: action != models.NONE},
// 		"ws-send": action != models.NONE,
// 		"name": templ.KeyValue[string, bool]{Key: string(action), Value: action != models.NONE},
// 	}... }
// 		class={ getBackground(square), templ.KV("cursor-pointer", (action != models.NONE && action != models.UNSELECT)) }
// 	>
// 		@Image("/static/images/" + piece + ".png", "/static/images/" + piece + ".png")
// 	</div>
// }

// templ BoardWhiteView(bs *models.BoardState) {
// 	for rank := 0; rank < 8; rank++ {
// 		<div class="flex">
// 			for file := 0; file < 8; file++ {
// 				@Square(bs.Pieces[rank*8 + file], rank*8 + file, bs.Actions[rank*8 + file])
// 			}
// 		</div>
// 	}
// }

// templ BoardBlackView(bs *models.BoardState) {
// 	for rank := 7; rank >= 0; rank-- {
// 		<div class="flex">
// 			for file := 7; file >= 0; file-- {
// 				@Square(bs.Pieces[rank*8 + file], rank*8 + file, bs.Actions[rank*8 + file])
// 			}
// 		</div>
// 	}
// }

templ clickableSquare(square int, action string, clases... string) {
	<div class={ clases }
		 id={ squareToString[square] }
		 hx-trigger="click"
		 name={ action }
		 ws-send>
	</div>
}

templ Board(bs *models.BoardState) {
	<div id="board" class={ "board", "m-4", templ.KV("flipped", bs.View == models.Black) } hx-ext="ws" ws-connect="/game" hx-target="#board" hx-swap-oob="outerHTML">
		for _, square := range bs.Highlighted {
			<div class={ "highlight", fmt.Sprintf("square-%d", square) }></div>
		}

		for square, piece := range bs.Pieces {
			@clickableSquare(square, "select", "piece", piece, fmt.Sprintf("square-%d", square))
		}

		for _, square := range bs.Moves {
			@clickableSquare(square, "move", "hint", fmt.Sprintf("square-%d", square))
		}

		for _, square := range bs.Captures {
			@clickableSquare(square, "move", "capture-hint", fmt.Sprintf("square-%d", square))
		}

		for _, square := range bs.Unselect {
			@clickableSquare(square, "unselect", "unselect", fmt.Sprintf("square-%d", square))
		}
	</div>
}