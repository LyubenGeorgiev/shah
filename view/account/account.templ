package account

import (
	"github.com/LyubenGeorgiev/shah/db/models"
	"github.com/LyubenGeorgiev/shah/view/layout"
	"strconv"
	"fmt"
)

templ Account(u *models.User, editable bool) {
	@layout.Layout("Account") {
		@UserInfo(u, editable)
	}
}

templ ProfilePicture(src string) {
	<div id="profile_picture" class="w-20 h-20 rounded-full mb-2">
		<img src={ src } alt="Icon" class="w-full h-full rounded-full"/>
	</div>
}

templ ShowGame(game *models.Game) {
	<a class="flex items-center rounded m-2 bg-gray-600" href={ templ.SafeURL(fmt.Sprintf("/replays/%s", game.ID)) }>
		<div class={ "flex", map[string]bool{"text-yellow-400": game.WinnerID.String != game.WhiteID && game.WinnerID.String != game.BlackID, "text-green-400": game.WinnerID.String == game.WhiteID, "text-red-400": game.WinnerID.String == game.BlackID} }>
			<div hx-get={ "/profilewidgets/" + game.WhiteID } hx-target="this" hx-swap="outerHTML" hx-trigger="load"></div>
		</div>
		<span>VS</span>
		<div class={ "flex", map[string]bool{"text-yellow-400": game.WinnerID.String != game.WhiteID && game.WinnerID.String != game.BlackID, "text-green-400": game.WinnerID.String == game.BlackID, "text-red-400": game.WinnerID.String == game.WhiteID} }>
			<div hx-get={ "/profilewidgets/" + game.BlackID } hx-target="this" hx-swap="outerHTML" hx-trigger="load"></div>
		</div>
	</a>
}

templ ShowHistory(userID string, page int, games []models.Game) {
	for _, game := range games {
		@ShowGame(&game)
	}
	if len(games) > 0 {
		<div class="flex" hx-get={ fmt.Sprintf("/history/%s/%d", userID, page+1) } hx-swap="outerHTML" hx-target="this" hx-trigger="intersect once"></div>
	}
}

templ UserInfo(u *models.User, editable bool) {
	<div class="flex flex-col w-full p-8 bg-gray-900 text-gray-100">
		<div class="flex mx-auto px-4 py-8 bg-gray-800 rounded-md max-w-screen-md">
			<div class="flex items-center">
				<div class="flex flex-col items-center p-2">
					@ProfilePicture(u.Image)
					if editable {
						<form hx-encoding="multipart/form-data" hx-put="/upload" hx-swap="outerHTML" hx-target="#profile_picture">
							<label for="file-upload" class="cursor-pointer rounded bg-green-600 px-4 py-2 text-gray-100 text-base">
								Choose File
							</label>
							<input id="file-upload" type="file" name="file" class="hidden"/>
							<button class="cursor-pointer rounded bg-blue-600 px-4 py-2 text-gray-100 text-base">
								Upload
							</button>
						</form>
					}
				</div>
				<div>
					<div class="text-2xl font-bold">{ u.Username }</div>
					<div class="flex flex-col">
						<div class="text-xl text-gray-400">Email: { u.Email }</div>
						<div class="text-xl text-gray-400">Rating: { strconv.FormatFloat(u.Rating, 'f', 2, 64) }</div>
						<div class="text-xl text-gray-400">Games Played: { strconv.Itoa(u.GamesPlayed) }</div>
						<div class="text-xl text-gray-400">Games Won: { strconv.Itoa(u.GamesWon) }</div>
						<div class="text-xl text-gray-400">Role: { u.Role }</div>
					</div>
				</div>
			</div>
		</div>
		// Match history
		<div class="flex flex-col items-start rounded bg-gray-800 p-2 mt-2 overflow-y-auto">
			<div hx-get={ fmt.Sprintf("/history/%d/0", u.ID) } hx-swap="outerHTML" hx-target="this" hx-trigger="load"></div>
		</div>
	</div>
}

templ UsersPage() {
	@layout.Layout("Users") {
		<div class="flex flex-col w-full p-8 bg-gray-900 text-gray-100 items-start">
			<!-- This div will be replaced with the loaded user data -->
			<div hx-get={ fmt.Sprintf("/users/0") } hx-swap="outerHTML" hx-target="this" hx-trigger="load"></div>
		</div>
	}
}

templ ChangeRole(user *models.User, role string) {
	<div class={ "flex justify-center m-2 rounded p-2", templ.KV("hover:cursor-pointer bg-gray-700 hover:bg-gray-600", user.Role != role), templ.KV("border-2 bg-gray-600", user.Role == role) } { templ.Attributes{"hx-trigger": templ.KeyValue[string, bool]{Key: "click", Value: user.Role != role}, "hx-put": templ.KeyValue[string, bool]{Key: fmt.Sprintf("/updateRole/%s/%d", role, user.ID), Value: user.Role != role}}... }>
		{ role }
	</div>
}

templ ShowUser(user *models.User) {
	<div class={ "flex m-2 items-center bg-gray-800 rounded p-2" }>
		<!-- Larger Profile Widget -->
		<div class="w-64 h-64" hx-get={ fmt.Sprintf("/profilewidgets/%d", user.ID) } hx-target="this" hx-swap="outerHTML" hx-trigger="load"></div>
		<div class="flex flex-col">
			@ChangeRole(user, "USER")
			@ChangeRole(user, "ADMIN")
		</div>
		<!-- Delete Button -->
		<button
			hx-post={ fmt.Sprintf("/deleteUser/%d", user.ID) }
			hx-trigger="click"
			hx-target="this"
			class="bg-red-500 hover:bg-red-600 text-white font-bold py-2 px-4 rounded"
		>
			Delete
		</button>
	</div>
}

templ ShowUsers( page int, users []models.User) {
	for _, user := range users {
		@ShowUser(&user)
	}
	if len(users) > 0 {
		<div class="flex" hx-get={ fmt.Sprintf("/users/%d", page+1) } hx-swap="outerHTML" hx-target="this" hx-trigger="intersect once"></div>
	}
}
